## Delete everything below this area before turn in!!

## Don't forget to push your changes up

Requirements for Software Security Engineering: 2-3 page report that describes the following:
List of final assurance claims
Describe the security requirements for the project captured using mis-use case diagrams. Include links to Lucidchart mis-use cases.
Review OSS project documentation for alignment of security requirements with advertised features. Summarize your observations
Review OSS project documentation for security related configuration and installation issues. Summarize your observations.


Current assurance claims:
Claim 1: Pi-hole **admin interface** has no exploitable HTTP weaknesses
Claim 2: Pi-hole attack surface is minimized
Claim 3: The Pi-hole standard input validation minimizes the possibility of device compromise
Claim 4: Pi-Hole authentication mechanism is secure from brute force attacks
Claim 5: Pi-hole DNS is adequately safe from denial of service attack

Final Assurance claims
Claim 1: The Pi-hole user interface has no exploitable HTTP weakness
Claim 2: The Pi-hole software is designed to mimimize the attack surface of the system
Claim 3: The Pi-Hole minimizes the possibility of device compromised during patching
Claim 4:
Claim 5: The Pi-hole DNS server is adequately safe from denial of service attack


## Delete everything above this for final turn in


Requirements for Software Security Engineering
25 October 2017
Michael Galde
Carmel Waka
Olivier Avande
Srikanth Vadla

Our group "R3tr0" focused on the software security aspect for the open source project called Pi-hole and have developed the following five assurance claims:
Claim 1: The Pi-hole user interface has no exploitable HTTP weakness.
The Pi-hole makes use of lighhtpd software package due to its minimal framework and the ease of which the system can be configured.
Claim 2: Pi-hole attack surface is minimized
The attack surface of the Pi-hole software is minimized by utilizing best practices approaches to software development and community involvement.
Claim 3: The Pi-Hole minimizes the possibility of device compromised during patching
and some details about this claim are
Claim 4: <  Will edit this>
and some details about this claim are
Claim 5: The Pi-hole DNS server is adequately safe from denial of service attacks**
The Pi-hole system uses dnsmasq as the underlying dns server to provide ad filtering. It is lightweight and requires minimal resources.
Like all dns services, it is exposed to denial of service. However, using the appropriate configuration it can be adequately secured.


While researching this open source project we discovered the following security requirements while simulating the following misuse requirements
**Functional Security Requirements**

Follow up with Review OSS project documentation for alignment of security requirements with advertised features. Summarize your observations
Feature 1 compared to advertised features
Feature 2 compared to advertised features
Feature 3 compared to advertised features
feature 4 compared to advertised features
feature 5 compared to advertised features

Follow up with Review OSS project documentation for security related configuration and installation issues. Summarize your observations.

Conclusion
